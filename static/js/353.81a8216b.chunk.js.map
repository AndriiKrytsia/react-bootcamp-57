{"version":3,"file":"static/js/353.81a8216b.chunk.js","mappings":"wMAEaA,EAAO,SAAHC,GAAkC,IAA5BC,EAAQD,EAARC,SAAUC,EAAUF,EAAVE,WAC/BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAiBpB,OACEI,EAAAA,EAAAA,MAAA,QAAMR,SAZa,SAAAS,GACnBA,EAAMC,iBACDJ,EAAKK,QAKVX,EAASM,GACTC,EAAQ,KALNK,MAAM,WAMV,EAG+BC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,UAAQ,EAACC,MAAOV,EAAMW,KAAK,OAAOC,SAjBxB,SAAAT,GACnBF,EAAQE,EAAMU,OAAOH,MACvB,KAgBIF,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAEZ,MAG7B,C,qGCvBamB,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACER,EAAAA,EAAAA,KAAA,SACES,KAAK,SACLL,SAAU,SAAAT,GAAK,OAAIY,GAASG,EAAAA,EAAAA,GAAUf,EAAMU,OAAOH,OAAO,GAGhE,E,oBCXaS,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAM,EAEzCC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,ECErCC,EAAW,WACtB,IAAMJ,GAAQK,EAAAA,EAAAA,IAAYP,GACpBK,GAASE,EAAAA,EAAAA,IAAYH,GAErBR,GAAWC,EAAAA,EAAAA,MASXW,EAPmB,WACvB,IAAMC,EAAkBJ,EAAOK,oBAC/B,OAAOR,EAAMG,QAAO,SAAA/B,GAAO,OAAAA,EAAJO,KAChB6B,oBAAoBC,SAASF,EAAgB,GAEtD,CAEsBG,GAEtB,OACEvB,EAAAA,EAAAA,KAAA,MAAIwB,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,IAAK,GAAI5B,SACtDoB,EAAcS,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAItC,EAAIqC,EAAJrC,KAAI,OAC5BE,EAAAA,EAAAA,MAAA,MAAa8B,MAAO,CAAEO,MAAO,KAAMhC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KACJQ,EAAAA,EAAAA,KAAA,UACEwB,MAAO,CAAEQ,WAAY,OACrBC,QAAS,kBAAM1B,GAAS2B,EAAAA,EAAAA,IAAWJ,GAAI,EAAC/B,SACzC,aALM+B,EAQJ,KAIb,E,UCIA,EA9Bc,WACZ,IAAMjB,GAAQK,EAAAA,EAAAA,IAAYP,GACpBJ,GAAWC,EAAAA,EAAAA,IAAYO,IAE7BoB,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACX,GAAG,CAAC7B,IAaJ,OACEb,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,SAEHC,EAAAA,EAAAA,KAAChB,EAAAA,EAAI,CAACE,SAdW,SAAAM,GACHqB,EAAMwB,MACpB,SAAAC,GAAE,OAAIA,EAAG9C,KAAK6B,sBAAwB7B,EAAK6B,mBAAmB,IAG9DvB,MAAM,sBAGRS,GAASgC,EAAAA,EAAAA,IAAQ/C,GACnB,EAKkCL,WAAW,aAAa,oBAEtDa,EAAAA,EAAAA,KAACM,EAAM,KACPN,EAAAA,EAAAA,KAACiB,EAAQ,MAGf,C","sources":["components/Form.jsx","components/Todos/Filter.jsx","redux/todos/selectors.js","components/Todos/TodoList.jsx","pages/Todos.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const Form = ({ onSubmit, nameButton }) => {\n  const [text, setText] = useState('');\n\n  const hendleChange = event => {\n    setText(event.target.value);\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    if (!text.trim()) {\n      alert('Add Todo');\n      return;\n    }\n\n    onSubmit(text);\n    setText('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit}>\n      <input required value={text} type=\"text\" onChange={hendleChange} />\n      <button type=\"submit\">{nameButton}</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/todos/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <input\n      name=\"filter\"\n      onChange={event => dispatch(addFilter(event.target.value))}\n    />\n  );\n};\n","export const selectTodos = state => state.todos.items;\n\nexport const selectFilter = state => state.filter;","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo } from 'redux/todos/operations';\nimport { selectFilter, selectTodos } from 'redux/todos/selectors';\n\nexport const TodoList = () => {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const getFilteretTodos = () => {\n    const normalazeFilter = filter.toLocaleLowerCase();\n    return todos.filter(({ text }) =>\n      text.toLocaleLowerCase().includes(normalazeFilter)\n    );\n  };\n\n  const filteredTodos = getFilteretTodos();\n\n  return (\n    <ul style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\n      {filteredTodos.map(({ id, text }) => (\n        <li key={id} style={{ width: 150 }}>\n          <p>{text}</p>\n          <button\n            style={{ background: 'red' }}\n            onClick={() => dispatch(deleteTodo(id))}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Filter } from 'components/Todos/Filter';\nimport { Form } from 'components/Form';\nimport { TodoList } from 'components/Todos/TodoList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectFilter, selectTodos } from 'redux/todos/selectors';\nimport { addTodo, fetchTodos } from 'redux/todos/operations';\n\nconst Todos = () => {\n  const todos = useSelector(selectTodos);\n  const dispatch = useDispatch(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  const hendleSubmit = text => {\n    const isExist = todos.find(\n      el => el.text.toLocaleLowerCase() === text.toLocaleLowerCase()\n    );\n    if (isExist) {\n      alert('Todo already exist');\n      return;\n    }\n    dispatch(addTodo(text));\n  };\n\n  return (\n    <div>\n      Todos\n      <Form onSubmit={hendleSubmit} nameButton=\"Add Todo\" />\n      filter your todo\n      <Filter />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default Todos;\n"],"names":["Form","_ref","onSubmit","nameButton","_useState","useState","_useState2","_slicedToArray","text","setText","_jsxs","event","preventDefault","trim","alert","children","_jsx","required","value","type","onChange","target","Filter","dispatch","useDispatch","name","addFilter","selectTodos","state","todos","items","selectFilter","filter","TodoList","useSelector","filteredTodos","normalazeFilter","toLocaleLowerCase","includes","getFilteretTodos","style","display","flexWrap","gap","map","_ref2","id","width","background","onClick","deleteTodo","useEffect","fetchTodos","find","el","addTodo"],"sourceRoot":""}