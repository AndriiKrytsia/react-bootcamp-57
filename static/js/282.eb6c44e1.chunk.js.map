{"version":3,"file":"static/js/282.eb6c44e1.chunk.js","mappings":"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","sources":["components/Props/BlogCard/BlogCard.styled.js","components/Props/BlogCard/BlogCard.jsx","components/Props/ForbesListItem/ForbesListItem.styled.js","components/Props/ForbesListItem/ForbesListItem.jsx","components/Props/ForbesList/ForbesList.styled.js","components/Props/ForbesList/ForbesList.jsx","components/Props/StatisticsItem/StatisticItem.styled.js","components/Props/StatisticsItem/StatisticsItem.jsx","components/Props/Statistics/Statistic.styled.js","components/Props/Statistics/Statistics.jsx","pages/Props.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 auto;\n  box-shadow: ${({ theme: { shadows } }) => shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  background-color: ${({ theme }) => theme.colors.white};\n  width: ${({ theme }) => theme.spacing(100)};\n`;\n\nexport const CardHeader = styled.div`\n  background-color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const CardPoster = styled.img`\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Card, CardHeader, CardPoster } from './BlogCard.styled';\n\nexport const BlogCard = ({\n  name,\n  postedAt,\n  poster,\n  tag,\n  title,\n  description,\n  avatar,\n}) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardPoster src={poster} alt={tag} />\n      </CardHeader>\n      <div>\n        <h2>{tag}</h2>\n        <p>{title}</p>\n        <p>{description}</p>\n      </div>\n      <div>\n        <div>\n          <img src={avatar} alt={name} />\n          <div>\n            <p>{name}</p>\n            <p>{postedAt}</p>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nBlogCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  postedAt: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ForbesItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  align-items: center;\n\n  padding: 10px 30px 10px 10px;\n  overflow: hidden;\n  border-radius: 10px;\n\n  box-shadow: ${props => props.theme.shadows.medium};\n  cursor: pointer;\n\n  transition-property: transform, box-shadow;\n  transition-duration: 0.25s;\n  transition-timing-function: ${props => props.theme.animation.cubicBezier};\n\n  background-color: ${props => props.theme.colors.white};\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: ${props => props.theme.shadows.small};\n  }\n`;\nexport const Avatar = styled.img`\n  width: 60px;\n  border-radius: 50%;\n\n  box-shadow: ${props => props.theme.shadows.regular};\n`;\n\nexport const Name = styled.h3`\n  color: ${props => props.theme.colors.gray};\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSizes.large};\n  letter-spacing: ${props => props.theme.spacing(0.25)};\n\n  margin-left: ${props => props.theme.spacing(2)};\n  margin-bottom: 0;\n`;\n\nexport const Capital = styled.span`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing(1)};\n\n  color: ${props => props.theme.colors.accent};\n  font-weight: 700;\n\n  font-size: ${props => props.theme.spacing(6)};\n`;\n","import PropTypes from 'prop-types';\nimport { Avatar, Capital, ForbesItem, Name } from './ForbesListItem.styled';\nimport { BiDollarCircle } from 'react-icons/bi';\nimport { FcBullish, FcBearish } from 'react-icons/fc';\n\nexport const ForbesListItem = ({ avatar, name, capital, isIncrease }) => {\n  return (\n    <ForbesItem>\n      <Avatar src={avatar} alt={name} />\n      <Name>{name}</Name>\n      <Capital>\n        {capital} <BiDollarCircle size={22} />\n        {isIncrease ? <FcBullish /> : <FcBearish />}\n      </Capital>\n    </ForbesItem>\n  );\n};\n\nForbesListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  capital: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LeaderBoard = styled.div`\n  width: ${({ theme }) => theme.spacing(120)};\n  border-radius: ${({ theme }) => theme.spacing(3)};\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nexport const BoardHeader = styled.div`\n  padding: ${({ theme }) => theme.spacing(12)};\n  background-color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const BoardTitle = styled.h2`\n  text-align: right;\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.white};\n  text-transform: uppercase;\n`;\n\nexport const TitleTop = styled.span`\n  display: block;\n  letter-spacing: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const TitleBottom = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  font-weight: 300;\n  letter-spacing: ${({ theme }) => theme.spacing(1)};\n`;\n\nexport const LeaderBoardProfiles = styled.ul`\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 0 0 12px;\n  padding: 12px 20px;\n  display: grid;\n  row-gap: ${({ theme }) => theme.spacing(2)};\n`;\n","import { ForbesListItem } from 'components/Props/ForbesListItem/ForbesListItem';\nimport PropTypes from 'prop-types';\nimport {\n  LeaderBoard,\n  BoardHeader,\n  BoardTitle,\n  TitleTop,\n  TitleBottom,\n  LeaderBoardProfiles,\n} from './ForbesList.styled';\n\nexport const ForbesList = ({ list }) => {\n  return (\n    <LeaderBoard>\n      <BoardHeader>\n        <BoardTitle>\n          <TitleTop>Forbes</TitleTop>\n          <TitleBottom>Leader board</TitleBottom>\n        </BoardTitle>\n      </BoardHeader>\n\n      <LeaderBoardProfiles>\n        {list.map(({ id, name, capital, avatar, isIncrease }) => {\n          return (\n            <ForbesListItem\n              key={id}\n              name={name}\n              capital={capital}\n              avatar={avatar}\n              isIncrease={isIncrease}\n            />\n          );\n        })}\n      </LeaderBoardProfiles>\n    </LeaderBoard>\n  );\n};\n\nForbesList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  background-color: ${({ theme }) => theme.colors.light};\n  border-radius: 8px;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  padding: 20px 40px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${({ theme }) => theme.spacing(8)};\n  font-weight: 900;\n  color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const Paragraph = styled.span`\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  font-weight: 300;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ListItem, Paragraph, Title } from './StatisticItem.styled';\nimport { IconContext } from 'react-icons';\n\nexport const StatisticsItem = ({ title, total, icon }) => {\n  return (\n    <ListItem>\n      <IconContext.Provider value={{ color: 'green', size: '30px' }}>\n        {icon}\n      </IconContext.Provider>\n      <Title>{total}</Title>\n      <Paragraph>{title}</Paragraph>\n    </ListItem>\n  );\n};\n\nStatisticsItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: ${({ theme }) => theme.spacing(8)};\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.dark};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { FaRegThumbsUp } from 'react-icons/fa';\nimport { MdPeople, MdOutlineProductionQuantityLimits } from 'react-icons/md';\nimport { GiTreeDoor } from 'react-icons/gi';\nimport { StatisticsItem } from 'components/Props/StatisticsItem/StatisticsItem';\nimport { List, Title } from './Statistic.styled';\nconst iconsArr = [\n  <FaRegThumbsUp />,\n  <MdPeople />,\n  <MdOutlineProductionQuantityLimits />,\n  <GiTreeDoor />,\n];\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <>\n      {title && <Title>{title}</Title>}\n      <List>\n        {stats.map(({ id, title, total }, index) => (\n          <StatisticsItem\n            key={id}\n            title={title}\n            total={total}\n            icon={iconsArr[index]}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n};\n","import { BlogCard } from 'components/Props/BlogCard/BlogCard';\nimport { ForbesList } from 'components/Props/ForbesList/ForbesList';\nimport { Statistics } from 'components/Props/Statistics/Statistics';\nimport article from 'data/article.json';\nimport data from 'data/data.json';\nimport forbes from 'data/forbes.json';\n\nconst Props = () => {\n  return (\n    <>\n      <BlogCard {...article} />\n      <Statistics title=\"Main Statistics\" stats={data} />\n      <ForbesList list={forbes} />\n    </>\n  );\n};\n\nexport default Props;\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","shadows","regular","_ref2","spacing","_ref3","colors","white","_ref4","CardHeader","_templateObject2","_ref5","grey","CardPoster","_templateObject3","BlogCard","name","postedAt","poster","tag","title","description","avatar","_jsxs","children","_jsx","src","alt","ForbesItem","props","medium","animation","cubicBezier","small","Avatar","Name","gray","fontSizes","large","Capital","_templateObject4","accent","ForbesListItem","capital","isIncrease","BiDollarCircle","size","FcBullish","FcBearish","LeaderBoard","BoardHeader","BoardTitle","_ref6","TitleTop","_ref7","TitleBottom","_templateObject5","_ref8","_ref9","LeaderBoardProfiles","_templateObject6","_ref10","_ref11","ForbesList","list","map","id","ListItem","light","Title","Paragraph","StatisticsItem","total","icon","IconContext","value","color","dark","List","iconsArr","FaRegThumbsUp","MdPeople","MdOutlineProductionQuantityLimits","GiTreeDoor","Statistics","stats","_Fragment","index","_objectSpread","article","data","forbes"],"sourceRoot":""}