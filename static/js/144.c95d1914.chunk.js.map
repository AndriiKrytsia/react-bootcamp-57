{"version":3,"file":"static/js/144.c95d1914.chunk.js","mappings":"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","sources":["components/Form.jsx","../node_modules/nanoid/index.browser.js","components/Todos/Filter.jsx","components/Todos/TodoList.jsx","pages/Todos.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const Form = ({ onSubmit, nameButton }) => {\n  const [text, setText] = useState('');\n\n  const hendleChange = event => {\n    setText(event.target.value);\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    if (!text.trim()) {\n      alert('Add Todo');\n      return;\n    }\n\n    onSubmit(text);\n    setText('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit}>\n      <input required value={text} type=\"text\" onChange={hendleChange} />\n      <button type=\"submit\">{nameButton}</button>\n    </form>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const Filter = ({ filterTodo }) => {\n  return <input name=\"filter\" onChange={filterTodo} />;\n};\n","export const TodoList = ({ todos, deleteTodo }) => {\n  return (\n    <ul>\n      {todos.map(({ id, text }) => (\n        <li key={id}>\n          {text}\n          <button onClick={() => deleteTodo(id)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { useEffect, useState } from 'react';\nimport { Filter } from 'components/Todos/Filter';\nimport { Form } from 'components/Form';\nimport { TodoList } from 'components/Todos/TodoList';\n\nconst LOCALSTORAGE_KEY = 'todos';\n\nconst initialState = [\n  { id: 1, text: 'todo 1' },\n  { id: 2, text: 'todo 2' },\n];\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null\n        ? defaultValue\n        : JSON.parse(serializedState);\n    } catch (error) {\n      return defaultValue;\n    }\n  });\n  useEffect(() => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  }, [key, value]);\n\n  return [value, setValue];\n};\n\nconst Todos = () => {\n  const [todos, setTodos] = useLocalStorage(LOCALSTORAGE_KEY, initialState);\n\n  const [filter, setFilter] = useState('');\n\n  const hendleSubmit = text => {\n    const isExist = todos.find(\n      el => el.text.toLocaleLowerCase() === text.toLocaleLowerCase()\n    );\n    if (isExist) {\n      alert('Todo already exist');\n      return;\n    }\n    const todo = { id: nanoid(), text };\n    setTodos(prevState => [...prevState, todo]);\n  };\n\n  const hendleDeleteTodo = idTodo => {\n    setTodos(prevState => prevState.filter(({ id }) => id !== idTodo));\n  };\n\n  const hendleFilerTodo = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  const getFilteretTodos = () => {\n    const normalazeFilter = filter.toLocaleLowerCase();\n    return todos.filter(({ text }) =>\n      text.toLocaleLowerCase().includes(normalazeFilter)\n    );\n  };\n\n  const filteredTodos = getFilteretTodos();\n  return (\n    <div>\n      Todos\n      <Form onSubmit={hendleSubmit} nameButton=\"Add Todo\" />\n      filter your todo\n      <Filter filterTodo={hendleFilerTodo} />\n      <TodoList todos={filteredTodos} deleteTodo={hendleDeleteTodo} />\n    </div>\n  );\n};\n\nexport default Todos;\n"],"names":["Form","_ref","onSubmit","nameButton","_useState","useState","_useState2","_slicedToArray","text","setText","_jsxs","event","preventDefault","trim","alert","children","_jsx","required","value","type","onChange","target","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Filter","filterTodo","name","TodoList","todos","deleteTodo","map","_ref2","onClick","initialState","_useLocalStorage","key","defaultValue","serializedState","localStorage","getItem","JSON","parse","error","setValue","useEffect","stringify","setItem","console","message","useLocalStorage","_useLocalStorage2","setTodos","_useState3","_useState4","filter","setFilter","filteredTodos","normalazeFilter","toLocaleLowerCase","includes","getFilteretTodos","find","el","todo","prevState","concat","_toConsumableArray","idTodo"],"sourceRoot":""}