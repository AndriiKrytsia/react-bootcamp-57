{"version":3,"file":"static/js/341.bc71e130.chunk.js","mappings":"wMAEaA,EAAO,SAAHC,GAAkC,IAA5BC,EAAQD,EAARC,SAAUC,EAAUF,EAAVE,WAC/BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAiBpB,OACEI,EAAAA,EAAAA,MAAA,QAAMR,SAZa,SAAAS,GACnBA,EAAMC,iBACDJ,EAAKK,QAKVX,EAASM,GACTC,EAAQ,KALNK,MAAM,WAMV,EAG+BC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,UAAQ,EAACC,MAAOV,EAAMW,KAAK,OAAOC,SAjBxB,SAAAT,GACnBF,EAAQE,EAAMU,OAAOH,MACvB,KAgBIF,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAEZ,MAG7B,C,kFCPWmB,EAAS,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,E,SC7BKG,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OAAOrB,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,SAASlB,SAAU,SAACT,GAAK,OAAGyB,ECMvC,CAACjB,KAAM,aAAcoB,QDNqC5B,EAAMU,OAAOH,OAAO,GACxF,E,UENasB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,KAAM,EAEnCC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAO,ECErCC,EAAW,WACtB,IAAMH,GAAQI,EAAAA,EAAAA,IAAYN,GACpBI,GAASE,EAAAA,EAAAA,IAAYH,GAErBP,GAAWC,EAAAA,EAAAA,MASZU,EAPmB,WACvB,IAAMC,EAAkBJ,EAAOK,oBAC/B,OAAOP,EAAME,QAAO,SAAA3C,GAAO,OAAAA,EAAJO,KAChByC,oBAAoBC,SAASF,EAAgB,GAEtD,CAEsBG,GAErB,OACEnC,EAAAA,EAAAA,KAAA,MAAAD,SACGgC,EAAcK,KAAI,SAAAC,GAAA,IAAGtB,EAAEsB,EAAFtB,GAAIvB,EAAI6C,EAAJ7C,KAAI,OAC5BE,EAAAA,EAAAA,MAAA,MAAAK,SAAA,CACGP,GACDQ,EAAAA,EAAAA,KAAA,UAAQsC,QAAS,kBAAMlB,EFlBP,SAAAL,GACtB,MAAO,CAACZ,KAAM,mBAAqBoB,QAASR,EAChD,CEgB0CwB,CAAWxB,GAAI,EAAChB,SAAC,aAF1CgB,EAGJ,KAIb,ECQA,EA5Bc,WAEd,IAAMW,GAAQI,EAAAA,EAAAA,IAAYN,GACpBJ,GAAWC,EAAAA,EAAAA,IAAYM,GAc3B,OACEjC,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,SAEHC,EAAAA,EAAAA,KAAChB,EAAAA,EAAI,CAACE,SAdW,SAAAM,GACHkC,EAAMc,MACpB,SAAAC,GAAE,OAAIA,EAAGjD,KAAKyC,sBAAwBzC,EAAKyC,mBAAmB,IAG9DnC,MAAM,sBAGRsB,EHrBmB,SAAA5B,GACpB,MAAO,CAAEW,KAAM,gBAAiBoB,QAAS,CAACR,GAAIT,IAAUd,KAAAA,GAC3D,CGmBakD,CAAQlD,GACnB,EAKkCL,WAAW,aAAa,oBAEtDa,EAAAA,EAAAA,KAACmB,EAAM,KACPnB,EAAAA,EAAAA,KAAC6B,EAAQ,MAGf,C","sources":["components/Form.jsx","../node_modules/nanoid/index.browser.js","components/Todos/Filter.jsx","redux/actions.js","redux/selectors.js","components/Todos/TodoList.jsx","pages/Todos.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const Form = ({ onSubmit, nameButton }) => {\n  const [text, setText] = useState('');\n\n  const hendleChange = event => {\n    setText(event.target.value);\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    if (!text.trim()) {\n      alert('Add Todo');\n      return;\n    }\n\n    onSubmit(text);\n    setText('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit}>\n      <input required value={text} type=\"text\" onChange={hendleChange} />\n      <button type=\"submit\">{nameButton}</button>\n    </form>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useDispatch } from \"react-redux\";\nimport { addFilter } from \"redux/actions\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n  return <input name=\"filter\" onChange={(event)=>dispatch(addFilter(event.target.value))} />;\n};\n","import { nanoid } from \"nanoid\";\n\nexport const addTodo = text => {\n   return { type: 'todos/addTodo', payload: {id: nanoid(), text} };\n}\n\nexport const deleteTodo = id => {\n    return {type: 'todos/deleteTodo' , payload: id}\n}\n\nexport const addFilter = value => {\n    return{type: \"add/filter\", payload: value}\n}","export const selectTodos = state => state.todos;\n\nexport const selectFilter = state => state.filter;","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteTodo } from \"redux/actions\";\nimport { selectFilter, selectTodos } from \"redux/selectors\";\n\nexport const TodoList = () => {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch()\n\n const getFilteretTodos = () => {\n   const normalazeFilter = filter.toLocaleLowerCase();\n   return todos.filter(({ text }) =>\n     text.toLocaleLowerCase().includes(normalazeFilter)\n   );\n };\n\n const filteredTodos = getFilteretTodos();\n\n  return (\n    <ul>\n      {filteredTodos.map(({ id, text }) => (\n        <li key={id}>\n          {text}\n          <button onClick={() => dispatch(deleteTodo(id))}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","\nimport { Filter } from 'components/Todos/Filter';\nimport { Form } from 'components/Form';\nimport { TodoList } from 'components/Todos/TodoList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo } from 'redux/actions';\nimport { selectFilter, selectTodos } from 'redux/selectors';\n\n\nconst Todos = () => {\n \nconst todos = useSelector(selectTodos)\nconst dispatch = useDispatch(selectFilter)\n\n\n  const hendleSubmit = text => {\n    const isExist = todos.find(\n      el => el.text.toLocaleLowerCase() === text.toLocaleLowerCase()\n    );\n    if (isExist) {\n      alert('Todo already exist');\n      return;\n    }\n    dispatch(addTodo(text));\n  };\n\n  return (\n    <div>\n      Todos\n      <Form onSubmit={hendleSubmit} nameButton=\"Add Todo\" />\n      filter your todo\n      <Filter/>\n      <TodoList/>\n    </div>\n  );\n};\n\nexport default Todos;\n"],"names":["Form","_ref","onSubmit","nameButton","_useState","useState","_useState2","_slicedToArray","text","setText","_jsxs","event","preventDefault","trim","alert","children","_jsx","required","value","type","onChange","target","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Filter","dispatch","useDispatch","name","payload","selectTodos","state","todos","selectFilter","filter","TodoList","useSelector","filteredTodos","normalazeFilter","toLocaleLowerCase","includes","getFilteretTodos","map","_ref2","onClick","deleteTodo","find","el","addTodo"],"sourceRoot":""}